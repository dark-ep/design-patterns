迭代器模式

本质：
	控制访问聚合对象中的元素

优点：
1	更好的封装性
    迭代器模式可以让你访问一个聚合对象的内容，而无须暴露该聚合对象的内部表示，
    从而提高聚合对象的封装性。
2   可以以不同的遍历方式来遍历一个聚合
    使用迭代器模式，使得聚合对象的内容和具体的迭代算法分离开。这样就可以通过使
    用不同的迭代器的实例、不同的遍历方式来遍历一个聚合对象了。
3   迭代器简化了聚合的接口
    有了迭代器的接口，则聚合本身就不需要再定义这些接口了，从而简化了聚合的接口
    定义。
4   简明客户端调用
    迭代器为遍历不同的聚合对象提供了一个统一的接口，使得客户端遍历聚合对象的内
    容变得更简单
5   同一个聚合上可以有多个遍历
    每个迭代器保持它自己的遍历状态，可以对同一个聚合对象同时进行多个遍历

使用情况：
1	如果你希望提供访问一个聚合对象的内容，但是又不想暴露它的内部表示的时候，可
    以使用迭代器模式来提供迭代器接口，从而让客户端只是通过迭代器的接口来访问聚
    合对象，从而无须关心聚合对象的内部实现。
2   如果你希望有多种遍历方式可以访问聚合对象，可以使用迭代器模式。
3   如果你希望为遍历不同的聚合对象提供一个统一的接口，可以使用迭代器模式。