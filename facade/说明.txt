外观模式

本质：
	封装交互，简化调用

优点：
1	松散耦合
2	简单易用
3	更好地划分访问的层次
缺点：
1	过多的或者时不太合理的Facade也容易让人迷惑。到底是调用Facade好呢，还是直接
    调用模块好。

使用情况：
1	如果你希望为一个复杂的子系统提供一个简单接口的时候，可以考虑使用外观模式。
	使用外观对象来实现大部分客户需要的功能，从而简化客户的使用。
2	如果想要让客户程序和抽象类的实现部分松散耦合，可以考虑使用外观模式，使用外
	观对象来将这个子系统与它的客户分离开来，从而提高子系统的独立性和可移植性。
3	如果构建多层结构的系统，可以考虑使用外观模式，使用外观对象作为每层的入口，
	这样都可以简化层间调用，也可以松散层次之间的依赖关系。